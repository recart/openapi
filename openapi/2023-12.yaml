openapi: 3.1.0
servers:
    - url: https://api.recart.com/app-integrations/2023-12/
      description: Production
info:
  title: Recart API
  description: Open API description of the Recart API
  version: 2023-12
paths:
  /subscriptions:
    post:
      summary: Initiate SMS subscription
      tags:
        - Subscription
      operationId: postSubscription
      security:
        - ApiKeyAuth: []
      description: |
        Trigger an SMS subscription flow in Recart. It sends the associated welcome flow to the recipient. Flow must be active to comply TCPA regulations.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: "#/components/schemas/PostSubscription"
      responses:
        "202":
          description: Accepted
        "4XX":
          $ref: "#/components/responses/HttpError"
        "5XX":
          $ref: "#/components/responses/HttpError"
  /webhooks:
    get:
      summary: Retrieve list of webhooks
      tags:
        - Webhooks
      operationId: listWebhooks
      security:
        - ApiKeyAuth: []
      description: Retrieve list of webhooks
      responses:
        "200":
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Webhook"
        "4XX":
          $ref: "#/components/responses/HttpError"
        "5XX":
          $ref: "#/components/responses/HttpError"
    post:
      summary: Create a new webhook
      tags:
        - Webhooks
      operationId: createWebhook
      security: 
        - ApiKeyAuth: []
      description: Create a new webhook
      requestBody: 
        required: true
        content:
          application/vnd.api+json: 
            schema: 
              type: object
              properties: 
                data:
                  $ref: "#/components/schemas/Webhook"
      responses:
        "201":
          description: Created
        "4XX":
          $ref: "#/components/responses/HttpError"
        "5XX":
          $ref: "#/components/responses/HttpError"
      callbacks: 
        Incoming message:
          '{$request.body#/data/attributes/address}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/IncomingMessage"
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
        Outgoing message:
          '{$request.body#/data/attributes/address}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/OutgoingMessage"
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
  /webhooks/{id}:
    get:
      summary: Recieve a single webhook
      tags:
        - Webhooks
      operationId: getWebhook
      security:
        - ApiKeyAuth: []
      description: Recieve a single webhook
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the webhook
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Webhook"
        "4XX":
          $ref: "#/components/responses/HttpError"
        "5XX":
          $ref: "#/components/responses/HttpError"
    delete:
      summary: Remove an existing webhook
      tags:
        - Webhooks
      operationId: deleteWebhook
      security:
        - ApiKeyAuth: []
      description: Remove an existing webhook
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the webhook
          schema:
            type: string
      responses:
        "204":
          description: No content
        "4XX":
          $ref: "#/components/responses/HttpError"
        "5XX":
          $ref: "#/components/responses/HttpError"
  /messages:
    post:
      summary: Send message(s) to a subscriber
      tags:
        - Messages
      operationId: postMessages
      security: 
        - ApiKeyAuth: []
      description: |
        Trigger SMS/MMS messages. 
      requestBody: 
        required: true
        content: 
          application/vnd.api+json: 
            schema: 
              type: object
              properties: 
                data:
                  $ref: "#/components/schemas/PostMessages"
      responses:
        "202":
          description: Accepted
        "4XX":
          $ref: "#/components/responses/HttpError"
        "5XX":
          $ref: "#/components/responses/HttpError"
  /messages/{id}:
    get:
      summary: Returns the message's status by its ID
      tags:
        - Messages
      security: 
        - ApiKeyAuth: []
      description: Returns the status of the selected message.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses: 
        "200":
          description: OK
          content:
            application/vnd.api+json: 
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OutgoingMessage'
        "4XX":
          $ref: "#/components/responses/HttpError"
        "5XX":
          $ref: "#/components/responses/HttpError"
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Recart-API-Key
      description: It can be obtained in Recart account after contacting Support
  responses:
    HttpError:
      description: HTTP Error response
      content:
        application/vnd.api+json:
          schema:
            type: object
            required:
              - errors 
            properties:
              errors:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - code
                    - title
                    - detail
                  properties:
                    id:
                      type: string
                      example: "17035478-01a9-4aeb-a13c-88ab51e6fee3"
                    code:
                      type: string
                      example: "ERR_BAD_REQUEST"
                    title:
                      type: string
                      example: "Bad request"
                    detail:
                      type: string
                      example: ""
  schemas:
    PostSubscription:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          example: "subscriptions"
        attributes:
          type: object
          description: Attributes of the subscriber
          required:
            - phoneNumber
            - source
          properties:
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: "+36301234567"
            source:
              type: object
              required: 
                - category
                - name
              properties:
                category:
                  type: string
                  description: Source category. Source must be added in the Recart account, contact Support for help.
                  example: "amped"
                name:
                  type: string
                  description: Source name. Source must be added in the Recart account, contact Support for help.
                  example: "welcome popup"
            browser:
              type: object
              properties:
                userAgent:
                  type: string
                  description: User agent of the browser
                  example: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko)"
                language:
                  type: string
                  description: Language of the browser
                  example: "en"
                url:
                  type: string
                  description: URL of the browser page
                  example: "https://cars.myshopify.com/buy-this"
            sessionId:
              type: string
              description: Recart identifier of the purchase session.  Use `_recart.getSessionId()` on the merchant's store when Recart script is running.
              example: "655637bfaf3c6463c0f06d3e"
            shopperId:
              type: string
              description: Recart identifier of the visitor. Use `_recart.getShopperId()` on the merchant's store when Recart script is running.
              example: "655637c97825e6ae655fe1b5"
            firstName:
              type: string
              description: First name of the subscriber
              example: "John"
            lastName:
              type: string
              description: Last name of the subscriber
              example: "Doe"
            timezone:
              type: string
              description: Timezone of the subscriber
              example: "Europe/Budapest"
            location:
              type: object
              properties:
                city:
                  type: string
                  description: City
                  example: "New York"
                province:
                  type: string
                  description: Province
                  example: "New York"
                zip:
                  type: string
                  description: ZIP code
                  example: "12345"
                country:
                  type: string
                  description: Country
                  example: "US"
                ipAddress:
                  type: string
                  description: IP address of the subscriber
                  example: "192.158.1.38."
    Webhook:
      type: object
      required:
        - type
        - attributes
      properties: 
        type:
          type: string
          example: "webhooks"
        attributes:
          type: object
          properties:
            topic:
              type: string
              description: Event type, messages/incoming, messages/outgoing
              example: "messages/incoming"
            address:
              type: string
              description: Destination URL for webhook delivery
              example: "https://call.me"
    PostMessages:
      type: object
      required: 
        - type
        - attributes
      properties:
        type:
          type: string
          example: "messages"
        attributes:
          type: object
          required:
            - phoneNumber
            - messages
          properties: 
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: "+36301234567"
            messages:
              type: array
              items:
                type: object
                required: 
                  - type
                  - body
                properties: 
                  type:
                    type: string
                    description: Type of the message, only promotional is supported
                    example: "promotional"
                  body:
                    type: string
                    description: Content of the message. Messages will be prefixed with "store name:". Maximum supported character count is 1024 per request.
                    example: "Hi, welcome to our store."
                  attachment: 
                    type: string
                    description: Maximum 1 attachment is supported that's size is under 300 KB
                    example: "https://img.url"
    IncomingMessage:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          example: "messages"
        attributes:
          type: object
          properties:
            id:
              type: string
              description: Id
              example: "65ba227ffa0ad3e1bef89449"
            body:
              type: string
              descripton: Content of the message
              example: What's the status of my order?
            attachments:
              type: array
              items:
                type: string
                example: "https://img.url"
            from:
              type: string
              description: from
              example: '+123456789'
            to:
              type: string
              description: to
              example: '+987654321'
    OutgoingMessage:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          example: "messages"
        attributes:
          type: object
          properties:
            id:
              type: string
              description: Id
              example: "65ba227ffa0ad3e1bef89449"
            status:
              type: string
              description: Status of the message. It can be processing, sent or error
              example: sent