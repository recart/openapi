openapi: 3.1.0
tags:
  - name: Abandonment
    description: Cart abandonments
  - name: Cart
    description: Carts
  - name: Event
    description: Events
  - name: Flow
    description: Flows
  - name: List
    description: List
  - name: Message
    description: Messages
  - name: Order
    description: Orders
  - name: Subscription
    description: Subscriptions
  - name: Webhook
    description: Webhooks
servers:
  - url: 'https://api.recart.com/app-integrations/2023-12'
    description: Production
info:
  title: Recart API
  description: Open API description of the Recart API
  version: 2023-12
  contact:
    name: Recart
    url: recart.com
paths:
  /flows:
    get:
      summary: Retrieve list of flows
      tags:
        - Flow
      operationId: listFlows
      security:
        - ApiKeyAuth: []
      description: |
        List flows.
      responses:
        '200':
          description: Ok
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flow'
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  '/flows/{id}':
    get:
      summary: Receive a single flow
      tags:
        - Flow
      operationId: getFlow
      security:
        - ApiKeyAuth: []
      description: |
        Get flow by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the flow
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Flow'
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  '/carts/{id}':
    put:
      summary: Update cart
      tags:
        - Cart
      operationId: updateCart
      security:
        - ApiKeyAuth: []
      description: |
        Update the cart's content. Endpoint overwrites the cart's content with the new one.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the cart (session)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/UpdateCart'
      responses:
        '204':
          description: No content
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
    delete:
      summary: Clear cart
      tags:
        - Cart
      operationId: clearCart
      security:
        - ApiKeyAuth: []
      description: |
        Clear the cart's content.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the cart (session)
          schema:
            type: string
      responses:
        '204':
          description: No content
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  /abandonments:
    post:
      summary: Abandon a session
      tags:
        - Abandonment
      operationId: postAbandonment
      security:
        - ApiKeyAuth: []
      description: |
        Trigger an abandonment event in Recart. It sends the associated abandonment flow to the recipient. Flow must be active to send the message.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/AbandonCart'
      responses:
        '200':
          description: OK
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  /orders:
    post:
      summary: Create an order
      tags:
        - Order
      operationId: postOrder
      security:
        - ApiKeyAuth: []
      description: |
        Create an order in Recart. It sends the associated receipt flow to the recipient. Flow must be active to send the message.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/CreateOrder'
      responses:
        '202':
          description: Created
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  '/orders/{id}':
    put:
      summary: Update an order
      tags:
        - Order
      operationId: updateOrder
      security:
        - ApiKeyAuth: []
      description: |
        Update an order in Recart.
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the order
          schema:
            type: number
          example: 1234567890
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/UpdateOrder'
      responses:
        '202':
          description: No content
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  /fulfillments:
    post:
      summary: Fulfill an order
      tags:
        - Order
      operationId: fulfillOrder
      security:
        - ApiKeyAuth: []
      description: |
        Fulfill an order.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/FulfillOrder'
      responses:
        '202':
          description: No content
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
      x-stoplight:
        id: rq2sqi3tprksv
  /subscriptions:
    post:
      summary: Initiate SMS subscription
      tags:
        - Subscription
      operationId: postSubscription
      security:
        - ApiKeyAuth: []
      description: |
        Trigger an SMS subscription flow in Recart. It sends the associated welcome flow to the recipient. Flow must be active to comply TCPA regulations.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PostSubscription'
      responses:
        '202':
          description: Accepted
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
    delete:
      summary: Unsubscribe SMS subscriber
      tags:
        - Subscription
      operationId: deleteSubscription
      security:
        - ApiKeyAuth: []
      description: |
        Unsubscribe an SMS subscriber if it's not unsubscribed yet.
      parameters:
        - name: phoneNumber
          in: query
          required: true
          description: Phone number of the subscriber
          schema:
            type: string
      responses:
        '204':
          description: No content
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  /event-sources:
    post:
      summary: Create new event source
      tags:
        - Event
      operationId: createEventSource
      security:
        - ApiKeyAuth: []
      description: |
        Create a new source to start sending events
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PostEventSource'
      responses:
        '201':
          description: Created
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  /events:
    post:
      summary: Post an event
      tags:
        - Event
      operationId: postEvent
      security:
        - ApiKeyAuth: []
      description: |
        Post an event which can be used to trigger flows in Recart.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PostEvent'
      responses:
        '200':
          description: OK
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  /webhooks:
    get:
      summary: Retrieve list of webhooks
      tags:
        - Webhook
      operationId: listWebhooks
      security:
        - ApiKeyAuth: []
      description: Retrieve list of webhooks
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
    post:
      summary: Create a new webhook
      tags:
        - Webhook
      operationId: createWebhook
      security:
        - ApiKeyAuth: []
      description: Create a new webhook
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Webhook'
      responses:
        '201':
          description: Created
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
      callbacks:
        Incoming message:
          '{$request.body#/data/attributes/address}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/IncomingMessage'
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
        Outgoing message:
          '{$request.body#/data/attributes/address}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OutgoingMessage'
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
        Subscribers unsubscribe:
          '{$request.body#/data/attributes/address}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SubscribersUnsubscribe'
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
        Subscribers subscribe:
          '{$request.body#/data/attributes/address}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SubscribersSubscribe'
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
  '/webhooks/{id}':
    get:
      summary: Recieve a single webhook
      tags:
        - Webhook
      operationId: getWebhook
      security:
        - ApiKeyAuth: []
      description: Recieve a single webhook
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the webhook
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook'
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
    delete:
      summary: Remove an existing webhook
      tags:
        - Webhook
      operationId: deleteWebhook
      security:
        - ApiKeyAuth: []
      description: Remove an existing webhook
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the webhook
          schema:
            type: string
      responses:
        '204':
          description: No content
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  /messages:
    post:
      summary: Send message(s) to a subscriber
      tags:
        - Message
      operationId: postMessages
      security:
        - ApiKeyAuth: []
      description: |
        Trigger SMS/MMS messages. Maximum 10 messages can be sent in a single request. Requester must comply with TCPA regulations, and make sure the message is not sent in quiet hours.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PostMessages'
      responses:
        '202':
          description: Accepted
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  '/messages/{id}':
    get:
      summary: Returns the message's status by its ID
      tags:
        - Message
      operationId: getMessage
      security:
        - ApiKeyAuth: []
      description: Returns the status of the selected message.
      parameters:
        - in: path
          name: id
          description: ID of the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OutgoingMessage'
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
  '/lists/{id}/phone-numbers':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Id of the list in Recart
    post:
      description: Add or remove phone numbers to a list
      summary: Handle phoneNumber operations in Recart lists
      tags:
        - List
      responses:
        '200':
          description: ''
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    x-stoplight:
                      id: 0tyc1rgrzppmq
                    type: array
                    items:
                      $ref: '#/components/schemas/ModifyListMembersResponse'
                      x-stoplight:
                        id: nwxg0jdtldr3t
              examples:
                Example 1:
                  value:
                    data:
                      - type: lists
                        attributes:
                          phoneNumber: '+1311111111'
                          status: added
                      - type: lists
                        attributes:
                          phoneNumber: '+1311111111'
                          status: removed
        4XX:
          $ref: '#/components/responses/HttpError'
        5XX:
          $ref: '#/components/responses/HttpError'
      operationId: modifyListMembers
      x-stoplight:
        id: 3he649s8c9zv8
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  x-stoplight:
                    id: 5fxylbmf9xemx
                  items:
                    $ref: '#/components/schemas/ModifyListMembersRequest'
                    x-stoplight:
                      id: scvfxj09p21t3
            examples:
              Example 1:
                value:
                  data:
                    - type: lists
                      attributes:
                        phoneNumbers:
                          - '+1321131232131'
                        operation: add
                    - type: lists
                      attributes:
                        phoneNumbers:
                          - '+1321131232131'
                        operation: add
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Recart-API-Key
      description: It can be obtained in Recart account after contacting Support
  responses:
    HttpError:
      description: HTTP Error response
      content:
        application/vnd.api+json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - code
                    - title
                    - detail
                  properties:
                    id:
                      type: string
                      example: 17035478-01a9-4aeb-a13c-88ab51e6fee3
                    code:
                      type: string
                      example: ERR_BAD_REQUEST
                    title:
                      type: string
                      example: Bad request
                    detail:
                      type: string
                      example: ''
  schemas:
    Flow:
      type:
        - object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - flows
        attributes:
          type: object
          required:
            - id
            - name
            - tags
            - status
          properties:
            id:
              type: string
              description: ID of flow
              example: 655637c97825e6ae655fe1b5
            name:
              type: string
              description: Name of flow
              example: Welcome flow
            tags:
              type: array
              items:
                type: string
              description: Flow tags
              example:
                - automated
                - welcome
            status:
              type: string
              description: Status of flow
              enum:
                - draft
                - active
                - inactive
                - cancelled
    UpdateCart:
      type:
        - object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - carts
        attributes:
          type: object
          required:
            - totalPrice
            - recoveryUrl
            - lineItems
          properties:
            totalPrice:
              type: object
              required:
                - value
                - currency
              properties:
                value:
                  type: number
                  format: double
                  description: Value of cart
                  example: 4.2
                currency:
                  type: string
                  description: Currency of the cart
                  example: USD
            recoveryUrl:
              type: string
              description: URL of the cart recovery page
              example: 'https://example.com/cart'
            lineItems:
              type: array
              items:
                type: object
                required:
                  - productId
                  - name
                  - quantity
                  - price
                properties:
                  productId:
                    type: string
                    format: int64
                    description: ID of the product
                    example: '9007199254740991'
                  variantId:
                    type: string
                    format: int64
                    description: ID of the product variant
                    example: '9007199254740991'
                  name:
                    type: string
                    description: Name of the product
                    example: Product name
                  quantity:
                    type: integer
                    format: int32
                    description: Quantity of the product
                    example: 1
                  price:
                    type: object
                    required:
                      - value
                      - currency
                    properties:
                      value:
                        type: number
                        format: double
                        description: Value of cartItem
                        example: 4.2
                      currency:
                        type: string
                        description: Currency of the cartItem
                        example: USD
    FulfillOrder:
      type:
        - object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - fulfillments
        attributes:
          type: object
          required:
            - orderNumber
            - orderId
            - createdAt
          properties:
            orderNumber:
              type: string
              format: int64
              description: Order number
              example: '9007199254740991'
            orderId:
              type: string
              format: int64
              description: Order ID
              example: '9007199254740991'
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
            sessionId:
              type: string
              description: Recart identifier of the purchase session. Use `_recart.getSessionId()` on the merchant's store when Recart script is running.
              example: 655637bfaf3c6463c0f06d3e
            createdAt:
              type: string
              description: UTC Date and time in ISO 8601 format
              example: '2021-08-10T14:00:00.000+02:00'
            trackingCompany:
              type: string
              description: Name of the tracking company
              example: UPS
            trackingNumber:
              type: string
              description: Tracking number
              example: '12344321'
            trackingUrl:
              type: string
              format: uri
              description: Tracking URL
              example: 'https://track.me'
    AbandonCart:
      type:
        - object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - abandonments
        attributes:
          type: object
          required:
            - type
            - sessionId
          properties:
            type:
              type: string
              description: 'Type of the abandonment, only "cart" is supported'
              example: cart
            sessionId:
              type: string
              description: Recart identifier of the purchase session. Use `_recart.getSessionId()` on the merchant's store when Recart script is running.
              example: 655637bfaf3c6463c0f06d3e
    PostSubscription:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - subscriptions
        attributes:
          type: object
          description: Attributes of the subscriber
          required:
            - phoneNumber
            - source
          properties:
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
            source:
              type: object
              required:
                - category
                - name
              properties:
                category:
                  type: string
                  description: Source category
                  example: amped
                name:
                  type: string
                  description: Source name
                  example: subscription
                externalId:
                  type: string
                  description: Optional identifier
                  example: 2024 june campaign
            browser:
              type: object
              properties:
                userAgent:
                  type: string
                  description: User agent of the browser
                  example: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko)'
                language:
                  type: string
                  description: Language of the browser
                  example: en
                url:
                  type: string
                  format: uri
                  description: URL of the browser page
                  example: 'https://cars.myshopify.com/buy-this'
            sessionId:
              type: string
              description: Recart identifier of the purchase session.  Use `_recart.getSessionId()` on the merchant's store when Recart script is running.
              example: 655637bfaf3c6463c0f06d3e
            shopperId:
              type: string
              description: Recart identifier of the visitor. Use `_recart.getShopperId()` on the merchant's store when Recart script is running.
              example: 655637c97825e6ae655fe1b5
            firstName:
              type: string
              description: First name of the subscriber
              example: John
            lastName:
              type: string
              description: Last name of the subscriber
              example: Doe
            timezone:
              type: string
              description: Timezone of the subscriber
              example: Europe/Budapest
            location:
              type: object
              properties:
                city:
                  type: string
                  description: City
                  example: New York
                province:
                  type: string
                  description: Province
                  example: New York
                zip:
                  type: string
                  description: ZIP code
                  example: '12345'
                country:
                  type: string
                  description: Country
                  example: US
                ipAddress:
                  type: string
                  format: ipv4
                  description: IP address of the subscriber
                  example: 192.158.1.38
    Webhook:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - webhooks
        attributes:
          type: object
          required:
            - topic
            - address
          properties:
            topic:
              type: string
              description: 'Event type, messages/incoming, messages/outgoing, subscribers/unsubscribe, subscribers/subscribe'
              example: messages/incoming
            address:
              type: string
              description: Destination URL for webhook delivery
              example: 'https://call.me'
    PostMessages:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - messages
        attributes:
          type: object
          required:
            - phoneNumber
            - messages
          properties:
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
            messages:
              type: array
              items:
                type: object
                required:
                  - type
                  - body
                properties:
                  type:
                    type: string
                    description: 'Type of the message, only promotional is supported'
                    example: promotional
                  body:
                    type: string
                    description: 'Content of the message, maximum 1024 characters'
                    example: 'Hi, welcome to our store.'
                  attachment:
                    type: string
                    description: 'URL of the attachment, extension must be .jpg, .jpeg, .png, or .gif'
                    example: 'https://img.url.jpg'
    IncomingMessage:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - messages
        attributes:
          type: object
          properties:
            id:
              type: string
              description: Id
              example: 65ba227ffa0ad3e1bef89449
            body:
              type: string
              descripton: Content of the message
              example: What's the status of my order?
            hasAttachment:
              type: boolean
              description: Returns true if the message has an attachment
              example: false
            from:
              type: string
              description: from
              example: '+123456789'
            to:
              type: string
              description: to
              example: '+987654321'
            receivedAt:
              type: string
              description: UTC Date and time in ISO 8601 format
              example: '2021-08-10T14:00:00.000+02:00'
    OutgoingMessage:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - messages
        attributes:
          type: object
          properties:
            id:
              type: string
              description: Id
              example: 65ba227ffa0ad3e1bef89449
            status:
              type: string
              description: 'Status of the message. It can be processing, sent or error'
              example: sent
            body:
              type: string
              descripton: Content of the message
              example: Hey there! Your order is on the way.
            sentAt:
              type: string
              description: UTC Date and time in ISO 8601 format
              example: '2021-08-10T14:00:00.000+02:00'
            from:
              type: string
              description: Phone number of the sender in E.164 format
              example: '+36301234567'
            to:
              type: string
              description: Phone number of the recipient in E.164 format
              example: '+36301234567'
    SubscribersUnsubscribe:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - subscriptions
        attributes:
          type: object
          properties:
            subscriberId:
              type: string
              description: Recart identifier of the subscriber
              example: 655637c97825e6ae655fe1b5
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
    SubscribersSubscribe:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - subscriptions
        attributes:
          type: object
          properties:
            subscriberId:
              type: string
              description: Recart identifier of the subscriber
              example: 655637c97825e6ae655fe1b5
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
            source:
              type: string
              description: Source of the subscription
              example: welcome popup
            sourceId:
              type: string
              description: Recart identifier of the source
              example: 655637c97825e6ae655fe1b5
            subscribedAt:
              type: string
              description: UTC Date and time in ISO 8601 format
              example: '2021-08-10T14:00:00.000+02:00'
            optinType:
              type: string
              description: Subscription optin level
              example: promotional
    CreateOrder:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          example: orders
        attributes:
          type: object
          required:
            - sessionId
            - orderStatusUrl
            - orderNumber
            - orderId
            - totalPrice
            - lineItems
            - createdAt
            - discountCodes
          properties:
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
            sessionId:
              type: string
              description: Recart identifier of the purchase session. Use `_recart.getSessionId()` on the merchant's store when Recart script is running.
              example: 655637bfaf3c6463c0f06d3e
            orderStatusUrl:
              type: string
              description: URL of the order status page
              example: 'https://example.com/order'
            orderNumber:
              type: string
              format: int64
              description: Order number
              example: '9007199254740991'
            orderId:
              type: string
              format: int64
              description: Order ID
              example: '9007199254740991'
            totalPrice:
              type: object
              required:
                - value
                - currency
              properties:
                value:
                  type: number
                  format: double
                  description: Value of order
                  example: 4.2
                currency:
                  type: string
                  description: Currency of the order
                  example: USD
            createdAt:
              type: string
              description: UTC Date and time in ISO 8601 format
              example: '2021-08-10T14:00:00.000+02:00'
            lineItems:
              type: array
              items:
                type: object
                required:
                  - productId
                  - name
                  - quantity
                  - price
                properties:
                  productId:
                    type: string
                    format: int64
                    description: ID of the product
                    example: '9007199254740991'
                  variantId:
                    type: string
                    format: int64
                    description: ID of the product variant
                    example: '9007199254740991'
                  name:
                    type: string
                    description: Name of the product
                    example: Product name
                  quantity:
                    type: integer
                    format: int32
                    description: Quantity of the product
                    example: 1
                  price:
                    type: object
                    required:
                      - value
                      - currency
                    properties:
                      value:
                        type: number
                        format: double
                        description: Value of orderItem
                        example: 4.2
                      currency:
                        type: string
                        description: Currency of the orderItem
                        example: USD
            discountCodes:
              type: array
              items:
                type: object
                required:
                  - code
                  - amount
                properties:
                  code:
                    type: string
                    description: Discount code
                    example: DISCOUNT
                  amount:
                    type: number
                    format: double
                    description: Value of discount
                    example: 4.2
    UpdateOrder:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          example: orders
        attributes:
          type: object
          required:
            - phoneNumber
            - orderStatusUrl
            - totalPrice
            - lineItems
            - discountCodes
            - updatedAt
          properties:
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
            orderStatusUrl:
              type: string
              description: URL of the order status page
              example: 'https://example.com/order'
            totalPrice:
              type: object
              required:
                - value
                - currency
              properties:
                value:
                  type: number
                  format: double
                  description: Value of order
                  example: 4.2
                currency:
                  type: string
                  description: Currency of the order
                  example: USD
            updatedAt:
              type: string
              description: UTC Date and time in ISO 8601 format
              example: '2021-08-10T14:00:00.000+02:00'
            lineItems:
              type: array
              items:
                type: object
                required:
                  - productId
                  - name
                  - quantity
                  - price
                properties:
                  productId:
                    type: string
                    format: int64
                    description: ID of the product
                    example: '9007199254740991'
                  variantId:
                    type: string
                    format: int64
                    description: ID of the product variant
                    example: '9007199254740991'
                  name:
                    type: string
                    description: Name of the product
                    example: Product name
                  quantity:
                    type: integer
                    format: int32
                    description: Quantity of the product
                    example: 1
                  price:
                    type: object
                    required:
                      - value
                      - currency
                    properties:
                      value:
                        type: number
                        format: double
                        description: Value of orderItem
                        example: 4.2
                      currency:
                        type: string
                        description: Currency of the orderItem
                        example: USD
            discountCodes:
              type: array
              items:
                type: object
                required:
                  - code
                  - amount
                properties:
                  code:
                    type: string
                    description: Discount code
                    example: DISCOUNT
                  amount:
                    type: number
                    format: double
                    description: Value of discount
                    example: 4.2
    PostEvent:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - events
        attributes:
          type: object
          required:
            - phoneNumber
            - source
          properties:
            phoneNumber:
              type: string
              description: Preferably E.164 format
              example: '+36301234567'
            source:
              type: object
              required:
                - category
                - name
              properties:
                category:
                  type: string
                  description: Source category
                  example: payment
                name:
                  type: string
                  description: Source name
                  example: billing attempt failed
            properties:
              type: object
              description: Data of the event. It can be string/number. Nested objects are not supported. Maximum 10 properties are allowed.
              example:
                updatePaymentMethodURL: 'https://example.com/update-payment-method'
                billingAttemptCount: 3
    PostEventSource:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - events
        attributes:
          type: object
          required:
            - category
            - name
            - type
          properties:
            category:
              type: string
              description: Source category
              example: payment
            name:
              type: string
              description: Source name
              example: billing attempt failed
            type:
              type: string
              enum:
                - custom
                - optin
              description: Type of source
              example: optin
    ModifyListMembersRequest:
      title: ModifyListMembersRequest
      x-stoplight:
        id: gwpfudrp4wj2w
      type: object
      description: Add or remove phone numbers to a list
      required:
        - type
        - attributes
      properties:
        type:
          x-stoplight:
            id: 49iq03nx3xb2a
          enum:
            - lists
        attributes:
          phoneNumbers:
            type: array
            x-stoplight: null
            id: uwj2nejaflqn8
            items:
              x-stoplight:
                id: 34edrtlsvagp0
              type: string
          operation:
            x-stoplight:
              id: l4xoy2ixb0e97
            enum:
              - add
              - remove
          required:
            - phoneNumbers
            - operation
          type: object
          properties:
            phoneNumbers:
              type: array
              x-stoplight:
                id: rtxc0yo38ssfg
              items:
                x-stoplight:
                  id: b4flpo70d0s7f
                type: string
            operation:
              x-stoplight:
                id: g74q72pogkdud
              enum:
                - add
                - remove
    ModifyListMembersResponse:
      title: ModifyListMembers Response
      x-stoplight:
        id: ukj49owf2psnn
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          x-stoplight:
            id: v7wd7r9f0i4rm
          enum:
            - lists
        attributes:
          type: object
          x-stoplight:
            id: gneh5c2ry0eee
          required:
            - phoneNumber
            - status
          properties:
            phoneNumber:
              type: string
              x-stoplight:
                id: u3exvoyb35tja
            status:
              x-stoplight:
                id: 7fwn9gv9xue09
              enum:
                - added
                - removed
                - not_found
